项目问题记录:
几个较为复杂和典型的问题;

1,在FindAdminAction中由于要向页面中输出一个关于权限的select下拉列表,这里使用了一个
PrivilegeReader.getPrivileges()静态方法来获得一个在PrivilegeReader类中以单例方式
在类加载时初始化的一个静态参数:List<Privilege> Privileges,那么由于需要添加"全部"和
"-1"这个关键的键值对以供在页面选择,那么我就直接用了一个临时列表来接这个静态的列表,然后
对这个列表添加一个Privilege对象,它的id是"-1",name是"全部";这里就有一个引用传递的问题,
由于这个静态的List地址可以说是公共的,不能被改变的,而我用临时变量来接了之后的所有修改
将会直接影响那个静态的List,所以会造成页面中本来只需要几个权限名的checklistbox中出现
多个"全部"的选项,显然是因为修改了这个List造成的,那么后来的解决办法是再建立一个临时的
List对象,然后将静态List中的各个元素取出赋值给这个List,由于这些元素不会被修改,只是要
去读取利用它们,所以不存在引用传递带来的关联问题;
总结,类似这种公共的静态引用变量需要被声明为final类型的,这样在无意中修改了它,首先编译
就会报错提醒;
(当然之后发现可以通过前端页面中的struts标签select中使用headerKey/headerValue,
也可以指定默认的最初下拉框选项;)

2,还有就是在前端页面验证时js代码的问题;
1)比如密码输入框可密码验证框都有对blur这个动作的检查,那就必须考虑所有非常规操作带来的
问题,比如说用户在输入了正确的密码和密码验证后再次返回到密码框修改为和验证不同的内容,然后
就不去对密码验证进行操作,这样就跳过了对密码验证框的blur动作的检查,所以在密码框的blur动作
中除了检查是否为空以外,还需要验证是否与密码验证框中内容一致;
2)在一些update页面对各个输入框的验证变量的初始值应该为true,因为如果为false,那么由于用户
不会去对每一个输入框做操作,修改页面的输入框都是有初始值的,所以会造成最后无法提交,因为有些
用户没有去点击发生blur事件的框体的验证变量是false的,所以在新增页面中框体的验证变量初始值
是false的,而修改页面这些初始值应该是true;
3)某些情况下,如果客户在页面上做了一些类似删除记录的操作等,将会带来页面的刷新,但是比较人性化
的设计是在刷新页面后需要停留在之前的页数上,而由于这种操作都是异步执行后再请求刷新这个列表
页面的,那么需要在表单体内添加一个类型为hidden的标签来接收和传递出当前页面的信息,这样表单提交时
就能把页面信息传递出去,之后action中的分页查询就有相应的参数了;

3,分页时对结果集做排序操作的问题;
当使用oracle数据库时,在构建jdbc的sql语句时需要注意的是rownum的优先级高于order by,所以
类似......where rownum<? order by ID这样的语句会导致rownum混乱,再执行where rownum>?时
就会发生问题,不会是按照ID大小来排序的;
解决方法:先对子表做查询并排序,然后用这个按照顺序排列的表的结果集作为一张新的表来做分页
查询;

4,在需要对一个已获得的List中对象按照特定顺序排序,比如传递给页面中select和checkboxlist
标签的集合,需要将其内容按照特定顺序显示,可以在后台先用Collections.sort()方法的一个重载
方法,利用匿名内部类作为第二个参数实现Comparator接口重写compare方法来规定List中对象的
排列规则,当然也可以去让这个List中实体类实现Comparable接口然后覆写compareTo方法;

5,有种情况,特别是在登录页面时,用户可能会通过浏览器的后退等返回按钮回到之前的登录页面,
此时由于浏览器的缓存,输入框中已经有一些内容,客户可能不会再去修改,那么就跳过了blur动作
的验证,还有一种情况是用户第一次来到登陆页面,没有把鼠标点入任何输入框而直接点击登陆,
那么这两种情况下用户将不能登陆并且得不到正确的错误信息,会造成困惑,那么就需要在登录按钮
的js验证中将所有的输入框统一做一次合法性验证;

6,当使用IE浏览器来访问服务器时,有时,比如在更换验证码图片的点击操作中,会需要img标签利用
src属性中的action地址向服务器发请求获得一个图片的输入流,那么IE浏览器在发现同一个地址被
多次访问就不会去发送请求,这就需要每一次更换验证码点击后就将src中地址添加一个随机的参数,
来骗过IE浏览器,比如:    		
function change(imgObj){
    imgObj.src = "validateCode.action?date="+new Date().getTime();
}



项目描述;
1)NETCTOSS项目,这个项目汉族要用来针对电信Unix服务器出租业务中,出租账号,资费维护,
收取费用的相关业务的管理;
2)该项目分为3个子系统:

DMS:用来提取用户登录Unix服务器的信息的;
通过读取服务器的日志文件,将登录信息读取出来之后写入到NETCTOSS统一的数据库中,需要
每一台Unix服务器都单独部署DMS;

NETCTOSS WEB系统:用来维护登录Unix服务器的账户的,以及用来维护用户的资费标准,查看
用户的消费情况(账单管理,报表);
包含了如下模块:
角色管理,管理员,资费管理,账务账号,业务账号,账单管理,报表;
我主要负责开发其中的角色管理,管理员,资费管理,账务账号,业务账号;

该系统的技术架构:
Java+JDBC+Struts2+jsp+javascript/jquery

介绍模块,比如:
账务账号:该模块用于维护向用户收费的账号,该账号与业务账号具有一对多的关系,业务账号是客户
登录Unix服务器的账号;
具有新增,修改,删除,组合查询,状态维护,查看明细的功能;
重点阐述组合查询,状态维护,新增(页面校验);

数据库存储过程:
每月固定时间(月底)自动计算用户本月消费情况,根据DMS提取的登录时长,NETCTOSS系统中
维护的资费数据来进行计算;
这些PL/SQL的脚本需要部署到NETCTOSS的数据库上,并且为存储过程定义好任务(何时触发);
计算好的数据可以在NETCTOSS WEB系统中查看;


